package com.leetcode.subject;

import com.leetcode.entity.ListNode;
import com.leetcode.utils.ListNodeUtil;

/**
 * 19. 删除链表的倒数第 N 个结点
 *
 * 给你一个链表，删除链表的倒数第 n 个结点，并且返回链表的头结点。
 *
 * 例：
 * 输入：head = [1,2,3,4,5], n = 2
 * 输出：[1,2,3,5]
 */
public class Main19 {
    public static void main(String[] args) {
        ListNode listNode = ListNodeUtil.generateListNode(new int[]{1,2});
        ListNode node = removeNthFromEnd(listNode, 2);
        ListNodeUtil.printListNode(node);
    }

    public static ListNode removeNthFromEnd(ListNode head, int n) {
        if(head == null) return head;
        int start = 0;
        ListNode next1 = head;
        ListNode next2 = head;
        while (next1 != null) {
            next1 = next1.next;
            if (next1 == null) {
                if(n > start) {
                    return head.next;
                }
                next2.next = next2.next.next;
            }
            if (n <= start) {
                next2 = next2.next;
            }
            start++;
        };
        return head;
    }
}
